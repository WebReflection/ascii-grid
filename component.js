/*! (c) Andrea Giammarchi */
const{max:t,min:e}=Math,{fromCharCode:s}=String,o=o=>{let r=0,a=1/0;const n=[];for(const c of(t=>{let e=0;const o=new Map;return t.replace(/\S+/g,(t=>{if(!o.has(t)){let r="";do{r=s(e++)}while(/[\r\n\t ]/.test(r));o.set(t,r)}return o.get(t)}))})(o).split(/[\r\n]+/)){const s=c.trimEnd().length;s&&(r=t(r,s),a=e(a,c.length-c.trimStart().length),n.push(c))}return n.map((t=>t.slice(a).padEnd(r-a))).join("\n")};var r=t=>{let e="",s=[];const r=[s];for(const a of o(t))switch(a){case" ":case"\t":a===e?(e="",s.push(".")):e=a;break;case"\n":r.push(s=[]);break;default:e=a,s.push("g"+a.charCodeAt(0))}const a=r.flat().filter((t=>"."!==t));return t=r.map((t=>`"${t.join(" ")}"`)).join(" "),{applyTo(e){let s=0;const o=new Map,{children:r,style:n}=e;n.display="grid",n["grid-template-areas"]=t;for(const t of a)if(!o.has(t)){const e=r[s++];e.style["grid-area"]=t,o.set(t,e)}return e},cssFor(e){let s=0;const o=new Set,r=[`${e}{display:grid;grid-template-areas:${t}}`];for(const t of a)o.has(t)||(r.push(`${e}>*:nth-child(${++s}){grid-area:${t}}`),o.add(t));return r.join("\n")}}};if(!customElements.get("ascii-grid")){const{COMMENT_NODE:t,ELEMENT_NODE:e}=Node,{find:s}=Array.prototype,o=e=>e.nodeType===t&&e.data.startsWith("#");class a extends HTMLElement{static observedAttributes=["cols","rows"];attributeChangedCallback(t,e,s){switch(t){case"cols":this.style["grid-template-columns"]=s;break;case"rows":this.style["grid-template-rows"]=s}}get structure(){const t=s.call(this.childNodes,o);return t?t.data.slice(1):""}set structure(t){let e=s.call(this.childNodes,o);e||(e=this.appendChild(document.createComment(""))),e.data="#"+t,r(t).applyTo(this)}connectedCallback(){const{structure:t}=this;t?this.structure=t:requestAnimationFrame((()=>this.connectedCallback()))}}customElements.define("ascii-grid",a);const n=t=>{const e=s.call(t.childNodes,o);if(e){r(e.data.slice(1)).applyTo(t);for(const e of a.observedAttributes){const s=t.getAttribute(e);s&&a.prototype.attributeChangedCallback.call(t,e,null,s)}}else console.error("unable to apply ascii-grid to ",t)},c=t=>{for(const e of t.querySelectorAll(".ascii-grid"))n(e)},i=t=>(l.observe(t,{childList:!0,subtree:!0}),t),l=new MutationObserver((t=>{for(const{addedNodes:s}of t)for(const t of s)t.nodeType===e&&(t.classList.contains("ascii-grid")&&n(t),c(t))}));c(i(document));const{attachShadow:d}=Element.prototype;Element.prototype.attachShadow=function(){return i(d.apply(this,arguments))}}export{r as default};
